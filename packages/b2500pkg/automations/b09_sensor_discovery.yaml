automation:
  alias: B2500PKG_B09_Sensor_Discovery
  description: ""
  triggers:
    - topic: B2500PKG/B2500_09/CD01
      trigger: mqtt
  conditions: []
  actions:
    - variables:
        payload: "{{ trigger.payload }}"
    - if:
        - condition: template
          value_template: "{{ 'l0=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l0_bit0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Entladen",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l0=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[7] }}",
                "unique_id": "sensor.b2500_09_l0_bit0",
                "object_id": "b2500_09_l0_bit0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l0=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l0_bit1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Laden",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l0=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[6] }}",
                "unique_id": "sensor.b2500_09_l0_bit1",
                "object_id": "b2500_09_l0_bit1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l0=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l0_bit2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 DOD erreicht",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l0=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[5] }}",
                "unique_id": "sensor.b2500_09_l0_bit2",
                "object_id": "b2500_09_l0_bit2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l0=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l0_bit3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Unterspannung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l0=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[4] }}",
                "unique_id": "sensor.b2500_09_l0_bit3",
                "object_id": "b2500_09_l0_bit3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l1_bit0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09E2 Entladen",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[7] }}",
                "unique_id": "sensor.b2500_09_l1_bit0",
                "object_id": "b2500_09_l1_bit0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l1_bit1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09E2 Laden",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[6] }}",
                "unique_id": "sensor.b2500_09_l1_bit1",
                "object_id": "b2500_09_l1_bit1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l1_bit2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09E2 DOD erreicht",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[5] }}",
                "unique_id": "sensor.b2500_09_l1_bit2",
                "object_id": "b2500_09_l1_bit2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l1_bit3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09E2 Unterspannung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[4] }}",
                "unique_id": "sensor.b2500_09_l1_bit3",
                "object_id": "b2500_09_l1_bit3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l1_bit4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09E1 Entladen",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[3] }}",
                "unique_id": "sensor.b2500_09_l1_bit4",
                "object_id": "b2500_09_l1_bit4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l1_bit5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09E1 Laden",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[2] }}",
                "unique_id": "sensor.b2500_09_l1_bit5",
                "object_id": "b2500_09_l1_bit5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l1_bit6/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09E1 DOD erreicht",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[1] }}",
                "unique_id": "sensor.b2500_09_l1_bit6",
                "object_id": "b2500_09_l1_bit6",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/l1_bit7/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09E1 Unterspannung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[0] }}",
                "unique_id": "sensor.b2500_09_l1_bit7",
                "object_id": "b2500_09_l1_bit7",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'b1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/b1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 E1 verbunden",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('b1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_b1",
                "object_id": "b2500_09_b1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'b2=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/b2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 E2 verbunden",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('b2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_b2",
                "object_id": "b2500_09_b2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'p1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/p1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Solar1 Input Status",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('p1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_p1",
                "object_id": "b2500_09_p1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'p2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/p2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Solar2 Input Status",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('p2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_p2",
                "object_id": "b2500_09_p2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'w1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/w1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 PV1 Leistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "state_class": "measurement",
                "device_class": "power",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('w1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_w1",
                "object_id": "b2500_09_w1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'w2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/w2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 PV2 Leistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "state_class": "measurement",
                "device_class": "power",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('w2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_w2",
                "object_id": "b2500_09_w2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'pe=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/pe/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Batterie SOC",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "state_class": "measurement",
                "device_class": "battery",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('pe=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_pe",
                "object_id": "b2500_09_pe",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'vv=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/vv/config
            retain: true
            payload: |
              {% raw %} {              
                "name": "B09 Geräteversion",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('vv=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_vv",
                "object_id": "b2500_09_vv",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'sv=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/sv/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Gerätesubversion",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('sv=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_sv",
                "object_id": "b2500_09_sv",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'cs=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/cs/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Ladeeinstellung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('cs=')[1].split(',')[0].replace('0','Laden und Entladen gleichzeitig').replace('1','Laden vor dem Entladen') }}",
                "unique_id": "sensor.b2500_09_cs",
                "object_id": "b2500_09_cs",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'cd=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/cd/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Entladeeinstellung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{% set parts = value.split('cd=') %}{% if parts | length > 1 %}{% set cd = parts[1].split(',')[0] %}{% if cd == '0' %}Ausgang PV1 und PV2 off{% elif cd == '1' %}Ausgang PV1 on, PV2 off{% elif cd == '2' %}Ausgang PV1 off, PV2 on{% elif cd == '3' %}Ausgang PV1 und PV2 on{% else %}unbekannt{% endif %}{% else %}unbekannt{% endif %}",
                "unique_id": "sensor.b2500_09_cd",
                "object_id": "b2500_09_cd",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'am=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/am/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 AM",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('am=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_am",
                "object_id": "b2500_09_am",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'o1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/o1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Output Status 1",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('o1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_o1",
                "object_id": "b2500_09_o1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'o2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/o2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Output Status 2",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('o2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_o2",
                "object_id": "b2500_09_o2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'do=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/do/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 DOD Entnehmbare Kapazität in %",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('do=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_do",
                "object_id": "b2500_09_do",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'lv=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/lv/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Entladeschwelle",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('lv=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_lv",
                "object_id": "b2500_09_lv",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'cj=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/cj/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 CJ Scene",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('cj=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_cj",
                "object_id": "b2500_09_cj",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'kn=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/kn/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Gesamtkapazität",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "device_class": "energy_storage",
                "state_class": "measurement",
                "unit_of_measurement": "Wh",
                "value_template": "{{ value.split('kn=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_kn",
                "object_id": "b2500_09_kn",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'g1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/g1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Output1 Leistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "state_class": "measurement",
                "device_class": "power",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('g1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_g1",
                "object_id": "b2500_09_g1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'g2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/g2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Output2 Leistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "state_class": "measurement",
                "device_class": "power",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('g2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_g2",
                "object_id": "b2500_09_g2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'tl=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/tl/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Temperatur low",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('tl=')[1].split(',')[0] }}",
                "device_class": "temperature",
                "unit_of_measurement": "°C",
                "unique_id": "sensor.b2500_09_tl",
                "object_id": "b2500_09_tl",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'th=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/th/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Temperatur high",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('th=')[1].split(',')[0] }}",
                "device_class": "temperature",
                "unit_of_measurement": "°C",
                "unique_id": "sensor.b2500_09_th",
                "object_id": "b2500_09_th",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'tc=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/tc/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Temperaturalarm (Laden)",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('tc=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_tc",
                "object_id": "b2500_09_tc",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'tf=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/tf/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Temperaturalarm (Entladen)",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('tf=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_tf",
                "object_id": "b2500_09_tf",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'fc=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/fc/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Chip Version",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('fc=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_fc",
                "object_id": "b2500_09_fc",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'id=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/id/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Geräte ID",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('id=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_id",
                "object_id": "b2500_09_id",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'a0=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/a0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Ladezustand Hauptspeicher",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('a0=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_a0",
                "object_id": "b2500_09_a0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'a1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/a1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Ladezustand Erweiterung1",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('a1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_a1",
                "object_id": "b2500_09_a1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'a2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/a2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Ladezustand Erweiterung2",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('a2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_a2",
                "object_id": "b2500_09_a2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/e1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer1 Beginn",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('e1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_e1",
                "object_id": "b2500_09_e1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/f1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer1 Ende",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('f1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_f1",
                "object_id": "b2500_09_f1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/h1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer1 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_h1",
                "object_id": "b2500_09_h1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/e2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer2 Beginn",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('e2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_e2",
                "object_id": "b2500_09_e2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/f2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer2 Ende",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('f2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_f2",
                "object_id": "b2500_09_f2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/h2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer2 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_h2",
                "object_id": "b2500_09_h2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e3=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/e3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer3 Beginn",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('e3=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_e3",
                "object_id": "b2500_09_e3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f3=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/f3/config
            retain: true
            payload: |
              {% raw %} {
              "name": "B09 Timer3 Ende",
              "state_topic": "B2500PKG/B2500_09/CD01",
              "value_template": "{{ value.split('f3=')[1].split(',')[0] }}",
              "unique_id": "sensor.b2500_09_f3",
              "object_id": "b2500_09_f3",
              "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h3=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/h3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer3 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h3=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_h3",
                "object_id": "b2500_09_h3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e4=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/e4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer4 Beginn",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('e4=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_e4",
                "object_id": "b2500_09_e4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f4=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/f4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer4 Ende",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('f4=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_f4",
                "object_id": "b2500_09_f4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h4=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/h4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer4 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h4=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_h4",
                "object_id": "b2500_09_h4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e5=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/e5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer5 Beginn",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('e5=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_e5",
                "object_id": "b2500_09_e5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f5=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/f5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer5 Ende",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('f5=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_f5",
                "object_id": "b2500_09_f5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h5=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/h5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer5 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h5=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_h5",
                "object_id": "b2500_09_h5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/d1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer1 aktiv",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d1=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_09_d1",
                "object_id": "b2500_09_d1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd2=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/d2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer2 aktiv",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d2=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_09_d2",
                "object_id": "b2500_09_d2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd3=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/d3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer3 aktiv",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d3=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_09_d3",
                "object_id": "b2500_09_d3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd4=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/d4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer4 aktiv",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d4=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_09_d4",
                "object_id": "b2500_09_d4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd5=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_09/d5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Timer5 aktiv",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d5=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_09_d5",
                "object_id": "b2500_09_d5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'bc=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/bc/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Tägliche Battterieladung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "state_class": "total_increasing",
                "device_class": "energy",
                "unit_of_measurement": "Wh",
                "value_template": "{{ value.split('bc=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_bc",
                "object_id": "b2500_09_bc",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'bs=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/bs/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Tägliche Batterieentladung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "state_class": "total_increasing",
                "device_class": "energy",
                "unit_of_measurement": "Wh",
                "value_template": "{{ value.split('bs=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_bs",
                "object_id": "b2500_09_bs",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'pt=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/pt/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Tägliche PV Erzeugung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "state_class": "total_increasing",
                "device_class": "energy",
                "unit_of_measurement": "Wh",
                "value_template": "{{ value.split('pt=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_pt",
                "object_id": "b2500_09_pt",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'md=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/md/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Entlademodus Timer/Selbstanpassung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('md=')[1].split(',')[0].replace('0','Timer').replace('1','Selbstanpassung') }}",
                "unique_id": "sensor.b2500_09_md",
                "object_id": "b2500_09_md",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'sg=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/sg/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 CT Sensor verbunden",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('sg=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_sg",
                "object_id": "b2500_09_sg",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'sp=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/sp/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 SP",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('sp=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_sp",
                "object_id": "b2500_09_sp",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'st=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/st/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 ST",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('st=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_st",
                "object_id": "b2500_09_st",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'c0=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/c0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 CTCH Kanal",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('c0=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_c0",
                "object_id": "b2500_09_c0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'c1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/c1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Status CT",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('c1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_c1",
                "object_id": "b2500_09_c1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'it=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/it/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 IT Tägliche abgegebene Leistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('it=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_it",
                "object_id": "b2500_09_it",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'm0=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/m0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Leistungsmessung Phase1",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('m0=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_m0",
                "object_id": "b2500_09_m0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'm1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/m1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Leistungsmessung Phase2",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('m1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_m1",
                "object_id": "b2500_09_m1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'm2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/m2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 Leistungsmessung Phase3",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('m2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_m2",
                "object_id": "b2500_09_m2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'm3=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/m3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 M3",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('m3=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_m3",
                "object_id": "b2500_09_m3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'lmo=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/lmo/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 LMO Nennausgangsleistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('lmo=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_lmo",
                "object_id": "b2500_09_lmo",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'lmi=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/lmi/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 LMI Nennaufnahmeleistung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('lmi=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_lmi",
                "object_id": "b2500_09_lmi",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'lmf=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_09/lmf/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B09 LMF Gerätebeschränkung",
                "state_topic": "B2500PKG/B2500_09/CD01",
                "value_template": "{{ value.split('lmf=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_09_lmf",
                "object_id": "b2500_09_lmf",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - action: automation.turn_off
      metadata: {}
      data:
        stop_actions: true
      target:
        entity_id: automation.b2500pkg_b09_sensor_discovery
