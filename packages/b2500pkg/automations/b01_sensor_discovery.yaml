automation:
  alias: B2500PKG_B01_Sensor_Discovery
  description: ""
  triggers:
    - topic: B2500PKG/b2500_01/CD01
      trigger: mqtt
  conditions: []
  actions:
    - sequence:
        - variables:
            payload: "{{ trigger.payload }}"
    - action: notify.persistent_notification
      metadata: {}
      data:
        message: Ausgel√∂st durch an / Warte auf Sensoren
    - if:
        - condition: template
          value_template: "{{ 'pe=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_01/pe/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B01 Batterie SOC",
                "state_topic": "B2500PKG/B2500_01/CD01",
                "state_class": "measurement",
                "device_class": "battery",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('pe=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_01_pe",
                "object_id": "b2500_01_pe",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - action: notify.persistent_notification
      metadata: {}
      data:
        message: Sensoren erkannt
    - action: automation.turn_off
      metadata: {}
      data:
        stop_actions: true
      target:
        entity_id: automation.b2500pkg_b01_sensor_discovery
      enabled: true
  mode: single
