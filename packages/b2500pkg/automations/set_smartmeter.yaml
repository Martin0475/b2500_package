input_select:
  smartmeter:
    name: Smartmeter auswÃ¤hlen
    options: 
      - "CT001"
      - "Shelly Pro 3EM"
      - "CT002"
      - "CT003"
      - "Shelly EM gen3"
      - "Shelly Pro EM50"

input_button:
  b2500_smartmeter_setzen:
    name: Smartmeter setzen     

automation:
  alias: B2500PKG Set Smartmeter
  description: |+
  
  triggers:
    - trigger: state
      entity_id:
        - input_button.b2500_smartmeter_setzen

  conditions: []
  actions:
    - variables:
        b2500_mac: >-
          {{ states('input_text.b01_mac') if states('input_select.speicherauswahl') == 'b2500_01' else
             states('input_text.b02_mac') if states('input_select.speicherauswahl') == 'b2500_02' else
             states('input_text.b03_mac') if states('input_select.speicherauswahl') == 'b2500_03' else
             states('input_text.b04_mac') if states('input_select.speicherauswahl') == 'b2500_04' else
             states('input_text.b05_mac') if states('input_select.speicherauswahl') == 'b2500_05' else
             states('input_text.b06_mac') if states('input_select.speicherauswahl') == 'b2500_06' else
             states('input_text.b07_mac') if states('input_select.speicherauswahl') == 'b2500_07' else
             states('input_text.b08_mac') if states('input_select.speicherauswahl') == 'b2500_08' else
             states('input_text.b09_mac') if states('input_select.speicherauswahl') == 'b2500_09' else
             'unknown'
          }}
        b2500_typ: >-
          {{ states('input_text.b01_typ') if states('input_select.speicherauswahl') == 'b2500_01' else
             states('input_text.b02_typ') if states('input_select.speicherauswahl') == 'b2500_02' else
             states('input_text.b03_typ') if states('input_select.speicherauswahl') == 'b2500_03' else
             states('input_text.b04_typ') if states('input_select.speicherauswahl') == 'b2500_04' else
             states('input_text.b05_typ') if states('input_select.speicherauswahl') == 'b2500_05' else
             states('input_text.b06_typ') if states('input_select.speicherauswahl') == 'b2500_06' else
             states('input_text.b07_typ') if states('input_select.speicherauswahl') == 'b2500_07' else
             states('input_text.b08_typ') if states('input_select.speicherauswahl') == 'b2500_08' else
             states('input_text.b09_typ') if states('input_select.speicherauswahl') == 'b2500_09' else
             'unknown'
          }}
        b2500_topic: >-
          {{ states('input_text.b01_topic') if states('input_select.speicherauswahl') == 'b2500_01' else
             states('input_text.b02_topic') if states('input_select.speicherauswahl') == 'b2500_02' else
             states('input_text.b03_topic') if states('input_select.speicherauswahl') == 'b2500_03' else
             states('input_text.b04_topic') if states('input_select.speicherauswahl') == 'b2500_04' else
             states('input_text.b05_topic') if states('input_select.speicherauswahl') == 'b2500_05' else
             states('input_text.b06_topic') if states('input_select.speicherauswahl') == 'b2500_06' else
             states('input_text.b07_topic') if states('input_select.speicherauswahl') == 'b2500_07' else
             states('input_text.b08_topic') if states('input_select.speicherauswahl') == 'b2500_08' else
             states('input_text.b09_topic') if states('input_select.speicherauswahl') == 'b2500_09' else
             'unknown'
          }}
    - choose:
        - conditions:
            - condition: state
              entity_id: input_select.smartmeter
              state: CT001
          sequence:
            - action: mqtt.publish
              metadata: {}
              data:
                evaluate_payload: false
                qos: 0
                retain: false
                topic: "{{ b2500_topic }}/{{ b2500_typ }}/App/{{ b2500_mac }}/ctrl"
                payload: |-
                  {% raw %}
                    cd=27,meter=0,mac=000000000000
                  {% endraw %}
        - conditions:
            - condition: state
              entity_id: input_select.smartmeter
              state: Shelly Pro 3EM
          sequence:
            - action: mqtt.publish
              metadata: {}
              data:
                evaluate_payload: false
                qos: 0
                retain: false
                topic: "{{ b2500_topic }}/{{ b2500_typ }}/App/{{ b2500_mac }}/ctrl"
                payload: |-
                  {% raw %}
                    cd=27,meter=1,mac=000000000000
                  {% endraw %}
        - conditions:
            - condition: state
              entity_id: input_select.smartmeter
              state: CT002
          sequence:
            - action: mqtt.publish
              metadata: {}
              data:
                evaluate_payload: false
                qos: 0
                retain: false
                topic: "{{ b2500_topic }}/{{ b2500_typ }}/App/{{ b2500_mac }}/ctrl"
                payload: |-
                  {% raw %}
                    cd=27,meter=3,mac=000000000000
                  {% endraw %}
        - conditions:
            - condition: state
              entity_id: input_select.smartmeter
              state: CT003
          sequence:
            - action: mqtt.publish
              metadata: {}
              data:
                evaluate_payload: false
                qos: 0
                retain: false
                topic: "{{ b2500_topic }}/{{ b2500_typ }}/App/{{ b2500_mac }}/ctrl"
                payload: |-
                  {% raw %}
                    cd=27,meter=4,mac=000000000000
                  {% endraw %}
        - conditions:
            - condition: state
              entity_id: input_select.smartmeter
              state: Shelly EM gen3
          sequence:
            - action: mqtt.publish
              metadata: {}
              data:
                evaluate_payload: false
                qos: 0
                retain: false
                topic: "{{ b2500_topic }}/{{ b2500_typ }}/App/{{ b2500_mac }}/ctrl"
                payload: |-
                  {% raw %}
                    cd=27,meter=5,mac=000000000000
                  {% endraw %}
        - conditions:
            - condition: state
              entity_id: input_select.smartmeter
              state: Shelly Pro EM50
          sequence:
            - action: mqtt.publish
              metadata: {}
              data:
                evaluate_payload: false
                qos: 0
                retain: false
                topic: "{{ b2500_topic }}/{{ b2500_typ }}/App/{{ b2500_mac }}/ctrl"
                payload: |-
                  {% raw %}
                    cd=27,meter=6,mac=000000000000
                  {% endraw %}
    - delay:
        hours: 0
        minutes: 0
        seconds: 3
    - action: mqtt.publish
      metadata: {}
      data:
        evaluate_payload: false
        qos: 0
        retain: false
        topic: "{{ b2500_topic }}/{{ b2500_typ }}/App/{{ b2500_mac }}/ctrl"
        payload: cd=01
  mode: queued
  max: 10
