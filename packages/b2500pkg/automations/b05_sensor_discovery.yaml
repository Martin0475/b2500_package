automation:
  alias: B2500PKG_B05_Sensor_Discovery
  description: ""
  triggers:
    - topic: B2500PKG/B2500_05/CD01
      trigger: mqtt
  conditions: []
  actions:
    - variables:
        payload: "{{ trigger.payload }}"
    - if:
        - condition: template
          value_template: "{{ 'l0=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l0_bit0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Entladen",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l0=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[7] }}",
                "unique_id": "sensor.b2500_05_l0_bit0",
                "object_id": "b2500_05_l0_bit0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l0=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l0_bit1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Laden",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l0=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[6] }}",
                "unique_id": "sensor.b2500_05_l0_bit1",
                "object_id": "b2500_05_l0_bit1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l0=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l0_bit2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 DOD erreicht",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l0=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[5] }}",
                "unique_id": "sensor.b2500_05_l0_bit2",
                "object_id": "b2500_05_l0_bit2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l0=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l0_bit3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Unterspannung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l0=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[4] }}",
                "unique_id": "sensor.b2500_05_l0_bit3",
                "object_id": "b2500_05_l0_bit3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l1_bit0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05E2 Entladen",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[7] }}",
                "unique_id": "sensor.b2500_05_l1_bit0",
                "object_id": "b2500_05_l1_bit0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l1_bit1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05E2 Laden",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[6] }}",
                "unique_id": "sensor.b2500_05_l1_bit1",
                "object_id": "b2500_05_l1_bit1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l1_bit2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05E2 DOD erreicht",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[5] }}",
                "unique_id": "sensor.b2500_05_l1_bit2",
                "object_id": "b2500_05_l1_bit2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l1_bit3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05E2 Unterspannung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[4] }}",
                "unique_id": "sensor.b2500_05_l1_bit3",
                "object_id": "b2500_05_l1_bit3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l1_bit4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05E1 Entladen",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[3] }}",
                "unique_id": "sensor.b2500_05_l1_bit4",
                "object_id": "b2500_05_l1_bit4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l1_bit5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05E1 Laden",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[2] }}",
                "unique_id": "sensor.b2500_05_l1_bit5",
                "object_id": "b2500_05_l1_bit5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l1_bit6/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05E1 DOD erreicht",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[1] }}",
                "unique_id": "sensor.b2500_05_l1_bit6",
                "object_id": "b2500_05_l1_bit6",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'l1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/l1_bit7/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05E1 Unterspannung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ ('{:0=8b}'.format(value.split('l1=')[1].split(',')[0] | int(0) )|batch(1)|map('join')|join(' ')).split(' ')[0] }}",
                "unique_id": "sensor.b2500_05_l1_bit7",
                "object_id": "b2500_05_l1_bit7",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'b1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/b1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 E1 verbunden",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('b1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_b1",
                "object_id": "b2500_05_b1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'b2=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/b2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 E2 verbunden",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('b2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_b2",
                "object_id": "b2500_05_b2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'p1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/p1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Solar1 Input Status",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('p1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_p1",
                "object_id": "b2500_05_p1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'p2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/p2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Solar2 Input Status",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('p2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_p2",
                "object_id": "b2500_05_p2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'w1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/w1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 PV1 Leistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "state_class": "measurement",
                "device_class": "power",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('w1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_w1",
                "object_id": "b2500_05_w1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'w2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/w2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 PV2 Leistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "state_class": "measurement",
                "device_class": "power",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('w2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_w2",
                "object_id": "b2500_05_w2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'pe=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/pe/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Batterie SOC",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "state_class": "measurement",
                "device_class": "battery",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('pe=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_pe",
                "object_id": "b2500_05_pe",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'vv=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/vv/config
            retain: true
            payload: |
              {% raw %} {              
                "name": "B05 Geräteversion",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('vv=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_vv",
                "object_id": "b2500_05_vv",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'sv=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/sv/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Gerätesubversion",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('sv=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_sv",
                "object_id": "b2500_05_sv",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'cs=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/cs/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Ladeeinstellung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('cs=')[1].split(',')[0].replace('0','Laden und Entladen gleichzeitig').replace('1','Laden vor dem Entladen') }}",
                "unique_id": "sensor.b2500_05_cs",
                "object_id": "b2500_05_cs",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'cd=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/cd/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Entladeeinstellung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{% set parts = value.split('cd=') %}{% if parts | length > 1 %}{% set cd = parts[1].split(',')[0] %}{% if cd == '0' %}Ausgang PV1 und PV2 off{% elif cd == '1' %}Ausgang PV1 on, PV2 off{% elif cd == '2' %}Ausgang PV1 off, PV2 on{% elif cd == '3' %}Ausgang PV1 und PV2 on{% else %}unbekannt{% endif %}{% else %}unbekannt{% endif %}",
                "unique_id": "sensor.b2500_05_cd",
                "object_id": "b2500_05_cd",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'am=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/am/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 AM",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('am=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_am",
                "object_id": "b2500_05_am",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'o1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/o1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Output Status 1",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('o1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_o1",
                "object_id": "b2500_05_o1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'o2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/o2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Output Status 2",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('o2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_o2",
                "object_id": "b2500_05_o2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'do=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/do/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 DOD Entnehmbare Kapazität in %",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('do=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_do",
                "object_id": "b2500_05_do",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'lv=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/lv/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Entladeschwelle",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('lv=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_lv",
                "object_id": "b2500_05_lv",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'cj=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/cj/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 CJ Scene",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('cj=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_cj",
                "object_id": "b2500_05_cj",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'kn=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/kn/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Gesamtkapazität",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "device_class": "energy_storage",
                "state_class": "measurement",
                "unit_of_measurement": "Wh",
                "value_template": "{{ value.split('kn=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_kn",
                "object_id": "b2500_05_kn",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'g1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/g1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Output1 Leistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "state_class": "measurement",
                "device_class": "power",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('g1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_g1",
                "object_id": "b2500_05_g1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'g2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/g2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Output2 Leistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "state_class": "measurement",
                "device_class": "power",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('g2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_g2",
                "object_id": "b2500_05_g2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'tl=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/tl/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Temperatur low",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('tl=')[1].split(',')[0] }}",
                "device_class": "temperature",
                "unit_of_measurement": "°C",
                "unique_id": "sensor.b2500_05_tl",
                "object_id": "b2500_05_tl",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'th=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/th/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Temperatur high",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('th=')[1].split(',')[0] }}",
                "device_class": "temperature",
                "unit_of_measurement": "°C",
                "unique_id": "sensor.b2500_05_th",
                "object_id": "b2500_05_th",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'tc=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/tc/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Temperaturalarm (Laden)",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('tc=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_tc",
                "object_id": "b2500_05_tc",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'tf=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/tf/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Temperaturalarm (Entladen)",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('tf=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_tf",
                "object_id": "b2500_05_tf",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'fc=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/fc/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Chip Version",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('fc=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_fc",
                "object_id": "b2500_05_fc",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'id=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/id/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Geräte ID",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('id=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_id",
                "object_id": "b2500_05_id",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'a0=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/a0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Ladezustand Hauptspeicher",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('a0=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_a0",
                "object_id": "b2500_05_a0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'a1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/a1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Ladezustand Erweiterung1",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('a1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_a1",
                "object_id": "b2500_05_a1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'a2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/a2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Ladezustand Erweiterung2",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "%",
                "value_template": "{{ value.split('a2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_a2",
                "object_id": "b2500_05_a2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/e1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer1 Beginn",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('e1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_e1",
                "object_id": "b2500_05_e1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/f1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer1 Ende",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('f1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_f1",
                "object_id": "b2500_05_f1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/h1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer1 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_h1",
                "object_id": "b2500_05_h1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/e2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer2 Beginn",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('e2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_e2",
                "object_id": "b2500_05_e2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/f2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer2 Ende",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('f2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_f2",
                "object_id": "b2500_05_f2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/h2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer2 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_h2",
                "object_id": "b2500_05_h2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e3=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/e3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer3 Beginn",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('e3=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_e3",
                "object_id": "b2500_05_e3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f3=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/f3/config
            retain: true
            payload: |
              {% raw %} {
              "name": "B05 Timer3 Ende",
              "state_topic": "B2500PKG/B2500_05/CD01",
              "value_template": "{{ value.split('f3=')[1].split(',')[0] }}",
              "unique_id": "sensor.b2500_05_f3",
              "object_id": "b2500_05_f3",
              "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h3=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/h3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer3 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h3=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_h3",
                "object_id": "b2500_05_h3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e4=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/e4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer4 Beginn",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('e4=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_e4",
                "object_id": "b2500_05_e4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f4=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/f4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer4 Ende",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('f4=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_f4",
                "object_id": "b2500_05_f4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h4=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/h4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer4 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h4=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_h4",
                "object_id": "b2500_05_h4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'e5=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/e5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer5 Beginn",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('e5=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_e5",
                "object_id": "b2500_05_e5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'f5=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/f5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer5 Ende",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('f5=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_f5",
                "object_id": "b2500_05_f5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'h5=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/h5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer5 Ausgabeleistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('h5=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_h5",
                "object_id": "b2500_05_h5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd1=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/d1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer1 aktiv",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d1=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_05_d1",
                "object_id": "b2500_05_d1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd2=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/d2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer2 aktiv",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d2=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_05_d2",
                "object_id": "b2500_05_d2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd3=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/d3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer3 aktiv",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d3=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_05_d3",
                "object_id": "b2500_05_d3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd4=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/d4/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer4 aktiv",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d4=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_05_d4",
                "object_id": "b2500_05_d4",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'd5=' in payload }}"
      then:
        - data:
            topic: homeassistant/binary_sensor/b2500_05/d5/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Timer5 aktiv",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "payload_on": "1",
                "payload_off": "0",
                "value_template": "{{ value.split('d5=')[1].split(',')[0] }}",
                "unique_id": "binary_sensor.b2500_05_d5",
                "object_id": "b2500_05_d5",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'bc=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/bc/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Tägliche Battterieladung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "state_class": "total_increasing",
                "device_class": "energy",
                "unit_of_measurement": "Wh",
                "value_template": "{{ value.split('bc=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_bc",
                "object_id": "b2500_05_bc",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'bs=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/bs/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Tägliche Batterieentladung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "state_class": "total_increasing",
                "device_class": "energy",
                "unit_of_measurement": "Wh",
                "value_template": "{{ value.split('bs=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_bs",
                "object_id": "b2500_05_bs",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'pt=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/pt/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Tägliche PV Erzeugung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "state_class": "total_increasing",
                "device_class": "energy",
                "unit_of_measurement": "Wh",
                "value_template": "{{ value.split('pt=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_pt",
                "object_id": "b2500_05_pt",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'md=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/md/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Entlademodus Timer/Selbstanpassung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('md=')[1].split(',')[0].replace('0','Timer').replace('1','Selbstanpassung') }}",
                "unique_id": "sensor.b2500_05_md",
                "object_id": "b2500_05_md",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'sg=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/sg/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 CT Sensor verbunden",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('sg=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_sg",
                "object_id": "b2500_05_sg",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'sp=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/sp/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 SP",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('sp=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_sp",
                "object_id": "b2500_05_sp",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'st=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/st/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 ST",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('st=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_st",
                "object_id": "b2500_05_st",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'c0=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/c0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 CTCH Kanal",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('c0=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_c0",
                "object_id": "b2500_05_c0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'c1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/c1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Status CT",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('c1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_c1",
                "object_id": "b2500_05_c1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'it=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/it/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 IT Tägliche abgegebene Leistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('it=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_it",
                "object_id": "b2500_05_it",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'm0=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/m0/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Leistungsmessung Phase1",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('m0=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_m0",
                "object_id": "b2500_05_m0",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'm1=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/m1/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Leistungsmessung Phase2",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('m1=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_m1",
                "object_id": "b2500_05_m1",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'm2=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/m2/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 Leistungsmessung Phase3",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('m2=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_m2",
                "object_id": "b2500_05_m2",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'm3=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/m3/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 M3",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('m3=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_m3",
                "object_id": "b2500_05_m3",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'lmo=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/lmo/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 LMO Nennausgangsleistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('lmo=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_lmo",
                "object_id": "b2500_05_lmo",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'lmi=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/lmi/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 LMI Nennaufnahmeleistung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "unit_of_measurement": "W",
                "value_template": "{{ value.split('lmi=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_lmi",
                "object_id": "b2500_05_lmi",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - if:
        - condition: template
          value_template: "{{ 'lmf=' in payload }}"
      then:
        - data:
            topic: homeassistant/sensor/b2500_05/lmf/config
            retain: true
            payload: |
              {% raw %} {
                "name": "B05 LMF Gerätebeschränkung",
                "state_topic": "B2500PKG/B2500_05/CD01",
                "value_template": "{{ value.split('lmf=')[1].split(',')[0] }}",
                "unique_id": "sensor.b2500_05_lmf",
                "object_id": "b2500_05_lmf",
                "entity_category": "diagnostic"
              } {% endraw %}
          action: mqtt.publish
    - action: automation.turn_off
      metadata: {}
      data:
        stop_actions: true
      target:
        entity_id: automation.b2500pkg_b05_sensor_discovery
